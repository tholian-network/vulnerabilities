{
	"name": "CVE-2021-29509",
	"description": "Puma is a concurrent HTTP 1.1 server for Ruby/Rack applications. The fix for CVE-2019-16770 was incomplete. The original fix only protected existing connections that had already been accepted from having their requests starved by greedy persistent-connections saturating all threads in the same process. However, new connections may still be starved by greedy persistent-connections saturating all threads in all processes in the cluster. A `puma` server which received more concurrent `keep-alive` connections than the server had threads in its threadpool would service only a subset of connections, denying service to the unserved connections. This problem has been fixed in `puma` 4.3.8 and 5.3.1. Setting `queue_requests false` also fixes the issue. This is not advised when using `puma` without a reverse proxy, such as `nginx` or `apache`, because you will open yourself to slow client attacks (e.g. slowloris). The fix is very small and a git patch is available for those using unsupported versions of Puma.",
	"packages": [
		{
			"name": "puma",
			"releases": {
				"bookworm": {
					"status": "resolved",
					"repositories": {
						"bookworm": "5.5.2-2"
					},
					"fixed_version": "4.3.8-1",
					"urgency": "not yet assigned"
				},
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "4.3.8-1"
					},
					"fixed_version": "4.3.8-1",
					"urgency": "not yet assigned"
				},
				"buster": {
					"status": "open",
					"repositories": {
						"buster": "3.12.0-2+deb10u2"
					},
					"urgency": "not yet assigned"
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "5.6.4-1"
					},
					"fixed_version": "4.3.8-1",
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "3.6.0-1",
						"stretch-security": "3.6.0-1+deb9u1"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				}
			}
		}
	],
	"scope": "local"
}