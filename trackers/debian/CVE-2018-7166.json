{
	"name": "CVE-2018-7166",
	"description": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
	"packages": [
		{
			"name": "nodejs",
			"releases": {
				"bookworm": {
					"status": "resolved",
					"repositories": {
						"bookworm": "16.13.2+really14.19.1~dfsg-6"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				},
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "12.22.5~dfsg-2~11u1",
						"bullseye-security": "12.22.5~dfsg-2~11u1"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				},
				"buster": {
					"status": "resolved",
					"repositories": {
						"buster": "10.24.0~dfsg-1~deb10u1",
						"buster-security": "10.24.0~dfsg-1~deb10u1"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "16.13.2+really14.19.1~dfsg-6"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "4.8.2~dfsg-1"
					},
					"fixed_version": "0",
					"urgency": "unimportant"
				}
			}
		}
	],
	"scope": "local"
}