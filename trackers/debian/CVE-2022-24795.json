{
	"name": "CVE-2022-24795",
	"description": "yajl-ruby is a C binding to the YAJL JSON parsing and generation library. The 1.x branch and the 2.x branch of `yajl` contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs. The reallocation logic at `yajl_buf.c#L64` may result in the `need` 32bit integer wrapping to 0 when `need` approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf->alloc into a small heap chunk. These integers are declared as `size_t` in the 2.x branch of `yajl`, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which `size_t` is a 32bit integer. Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption. This vulnerability mostly impacts process availability. Maintainers believe exploitation for arbitrary code execution is unlikely. A patch is available and anticipated to be part of yajl-ruby version 1.4.2. As a workaround, avoid passing large inputs to YAJL.",
	"packages": [
		{
			"name": "ruby-yajl",
			"releases": {
				"bookworm": {
					"status": "open",
					"repositories": {
						"bookworm": "1.4.1-1"
					},
					"urgency": "not yet assigned"
				},
				"bullseye": {
					"status": "open",
					"repositories": {
						"bullseye": "1.4.1-1"
					},
					"urgency": "not yet assigned",
					"nodsa": "Minor issue",
					"nodsa_reason": ""
				},
				"buster": {
					"status": "open",
					"repositories": {
						"buster": "1.3.1-1"
					},
					"urgency": "not yet assigned",
					"nodsa": "Minor issue",
					"nodsa_reason": ""
				},
				"sid": {
					"status": "open",
					"repositories": {
						"sid": "1.4.1-1"
					},
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "open",
					"repositories": {
						"stretch": "1.2.0-3"
					},
					"urgency": "not yet assigned",
					"nodsa": "Minor issue",
					"nodsa_reason": ""
				}
			}
		}
	],
	"scope": "local"
}