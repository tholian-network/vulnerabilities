{
	"name": "CVE-2019-3901",
	"description": "A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8.",
	"packages": [
		{
			"name": "linux",
			"releases": {
				"bookworm": {
					"status": "resolved",
					"repositories": {
						"bookworm": "5.17.3-1"
					},
					"fixed_version": "4.6.1-1",
					"urgency": "not yet assigned"
				},
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "5.10.106-1",
						"bullseye-security": "5.10.103-1"
					},
					"fixed_version": "4.6.1-1",
					"urgency": "not yet assigned"
				},
				"buster": {
					"status": "resolved",
					"repositories": {
						"buster": "4.19.235-1",
						"buster-security": "4.19.232-1"
					},
					"fixed_version": "4.6.1-1",
					"urgency": "not yet assigned"
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "5.17.3-1"
					},
					"fixed_version": "4.6.1-1",
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "4.9.228-1",
						"stretch-security": "4.9.303-1"
					},
					"fixed_version": "4.6.1-1",
					"urgency": "not yet assigned"
				}
			}
		}
	],
	"scope": "local"
}