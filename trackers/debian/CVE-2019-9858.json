{
	"name": "CVE-2019-9858",
	"description": "Remote code execution was discovered in Horde Groupware Webmail 5.2.22 and 5.2.17. Horde/Form/Type.php contains a vulnerable class that handles image upload in forms. When the Horde_Form_Type_image method onSubmit() is called on uploads, it invokes the functions getImage() and _getUpload(), which uses unsanitized user input as a path to save the image. The unsanitized POST parameter object[photo][img][file] is saved in the $upload[img][file] PHP variable, allowing an attacker to manipulate the $tmp_file passed to move_uploaded_file() to save the uploaded file. By setting the parameter to (for example) ../usr/share/horde/static/bd.php, one can write a PHP backdoor inside the web root. The static/ destination folder is a good candidate to drop the backdoor because it is always writable in Horde installations. (The unsanitized POST parameter went probably unnoticed because it's never submitted by the forms, which default to securely using a random path.)",
	"packages": [
		{
			"name": "php-horde-form",
			"releases": {
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "2.0.20-2"
					},
					"fixed_version": "2.0.18-3.1",
					"urgency": "not yet assigned"
				},
				"buster": {
					"status": "resolved",
					"repositories": {
						"buster": "2.0.18-3.1+deb10u1"
					},
					"fixed_version": "2.0.18-3.1",
					"urgency": "not yet assigned"
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "2.0.20-2"
					},
					"fixed_version": "2.0.18-3.1",
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "2.0.15-1+deb9u2",
						"stretch-security": "2.0.15-1+deb9u1"
					},
					"fixed_version": "2.0.15-1+deb9u1",
					"urgency": "not yet assigned"
				}
			}
		}
	],
	"scope": "local"
}