{
	"name": "CVE-2019-14232",
	"description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
	"packages": [
		{
			"name": "python-django",
			"releases": {
				"bookworm": {
					"status": "resolved",
					"repositories": {
						"bookworm": "2:3.2.13-1"
					},
					"fixed_version": "2:2.2.4-1",
					"urgency": "not yet assigned"
				},
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "2:2.2.26-1~deb11u1"
					},
					"fixed_version": "2:2.2.4-1",
					"urgency": "not yet assigned"
				},
				"buster": {
					"status": "resolved",
					"repositories": {
						"buster": "1:1.11.29-1~deb10u1",
						"buster-security": "1:1.11.29-1~deb10u1"
					},
					"fixed_version": "1:1.11.23-1~deb10u1",
					"urgency": "not yet assigned"
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "2:3.2.13-1"
					},
					"fixed_version": "2:2.2.4-1",
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "1:1.10.7-2+deb9u9",
						"stretch-security": "1:1.10.7-2+deb9u16"
					},
					"fixed_version": "1:1.10.7-2+deb9u6",
					"urgency": "not yet assigned"
				}
			}
		}
	],
	"scope": "local"
}