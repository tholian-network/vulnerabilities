{
	"name": "CVE-2015-20001",
	"description": "In the standard library in Rust before 1.2.0, BinaryHeap is not panic-safe. The binary heap is left in an inconsistent state when the comparison of generic elements inside sift_up or sift_down_range panics. This bug leads to a drop of zeroed memory as an arbitrary type, which can result in a memory safety violation.",
	"packages": [
		{
			"name": "rustc",
			"releases": {
				"bookworm": {
					"status": "resolved",
					"repositories": {
						"bookworm": "1.58.1+dfsg1-1"
					},
					"fixed_version": "1.2.0+dfsg1-1",
					"urgency": "not yet assigned"
				},
				"bullseye": {
					"status": "resolved",
					"repositories": {
						"bullseye": "1.48.0+dfsg1-2"
					},
					"fixed_version": "1.2.0+dfsg1-1",
					"urgency": "not yet assigned",
					"nodsa": "Minor issue",
					"nodsa_reason": ""
				},
				"buster": {
					"status": "resolved",
					"repositories": {
						"buster": "1.41.1+dfsg1-1~deb10u1"
					},
					"fixed_version": "1.2.0+dfsg1-1",
					"urgency": "not yet assigned",
					"nodsa": "Minor issue",
					"nodsa_reason": ""
				},
				"sid": {
					"status": "resolved",
					"repositories": {
						"sid": "1.58.1+dfsg1-1"
					},
					"fixed_version": "1.2.0+dfsg1-1",
					"urgency": "not yet assigned"
				},
				"stretch": {
					"status": "resolved",
					"repositories": {
						"stretch": "1.34.2+dfsg1-1~deb9u1",
						"stretch-security": "1.41.1+dfsg1-1~deb9u1"
					},
					"fixed_version": "1.2.0+dfsg1-1",
					"urgency": "not yet assigned"
				}
			}
		}
	],
	"scope": "local"
}