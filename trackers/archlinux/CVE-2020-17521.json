{
	"name": "CVE-2020-17521",
	"type": "privilege escalation",
	"severity": "High",
	"vector": "Local",
	"description": "Groovy before version 2.5.14 may create temporary directories within the OS temporary directory which is shared between all users on affected systems. Groovy will create such directories for internal use when producing Java Stubs or on behalf of user code via two extension methods for creating temporary directories. If Groovy user code uses either of these extension methods, and stores executable code in the resulting temporary directory, this can lead to local privilege escalation. If such Groovy code is making use of the temporary directory to store sensitive information, such information could be exposed or modified.",
	"groups": [
		"AVG-1325"
	],
	"packages": [
		"groovy"
	],
	"advisories": [
		"ASA-202103-14"
	],
	"references": [
		"https://issues.apache.org/jira/browse/GROOVY-9824",
		"https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f"
	],
	"notes": "Workaround\r\n==========\r\n\r\nSetting the java.io.tmpdir system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all Groovy versions.\r\n\r\nUsers who cannot easily move to the fixed Groovy versions may wish to consider using the JDKâ€™s Files#createTempDirectory method instead of the Groovy extension methods."
}