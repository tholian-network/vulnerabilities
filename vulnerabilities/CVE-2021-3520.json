{
	"id": "CVE-2021-3520",
	"description": "There's a flaw in lz4. An attacker who submits a crafted file to an application linked with lz4 may be able to trigger an integer overflow, leading to calling of memmove() on a negative size argument, causing an out-of-bounds write and/or a crash. The greatest impact of this flaw is to availability, with some potential impact to confidentiality and integrity as well.\n\nA vulnerability was found in lz4, where a potential memory corruption due to an integer overflow bug caused one of the memmove arguments to become negative. Depending on how the library was compiled this will hit an assert() inside the library and dump core, leaving a 4GB core file, or it wil go into libc and crash inside the memmove() function.",
	"hardware": [],
	"software": [
		{
			"vendor": "archlinux",
			"product": "lz4",
			"version": "< 1:1.9.3-2"
		},
		{
			"vendor": "debian-bookworm",
			"product": "lz4",
			"version": "< 1.9.3-2"
		},
		{
			"vendor": "debian-bullseye",
			"product": "lz4",
			"version": "< 1.9.3-2"
		},
		{
			"vendor": "debian-buster",
			"product": "lz4",
			"version": "< 1.8.3-1+deb10u1"
		},
		{
			"vendor": "debian-stretch",
			"product": "lz4",
			"version": "< 0.0~r131-2+deb9u1"
		}
	],
	"references": [
		"https://bugzilla.redhat.com/show_bug.cgi?id=1954559",
		"https://www.oracle.com//security-alerts/cpujul2021.html",
		"https://www.oracle.com/security-alerts/cpuoct2021.html",
		"https://security.netapp.com/advisory/ntap-20211104-0005/",
		"https://github.com/lz4/lz4/pull/972",
		"https://github.com/lz4/lz4/commit/8301a21773ef61656225e264f4f06ae14462bca7"
	],
	"_edited_": false,
	"severity": "Low"
}