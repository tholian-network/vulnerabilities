{
	"id": "CVE-2018-1121",
	"description": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.\n\nA security issue has been found in Linux <= 4.16.9, where an unprivileged attacker can hide a process from procps-ng's utilities by exploiting either a denial of service (a rather noisy method) or a race condition inherent in reading /proc/PID entries (a stealthier method).",
	"hardware": [],
	"software": [
		{
			"vendor": "archlinux",
			"product": "linux",
			"version": "< 4.17.2-1"
		},
		{
			"vendor": "archlinux",
			"product": "linux-lts",
			"version": "< 4.14.44-1"
		},
		{
			"vendor": "archlinux",
			"product": "linux-hardened",
			"version": "< 4.17a-1"
		},
		{
			"vendor": "archlinux",
			"product": "linux-zen",
			"version": "< 4.17-1"
		}
	],
	"references": [
		"https://www.exploit-db.com/exploits/44806/",
		"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
		"http://www.securityfocus.com/bid/104214",
		"http://seclists.org/oss-sec/2018/q2/122",
		"https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt"
	],
	"_edited_": false,
	"severity": "Low"
}