{
	"name": "CVE-2021-23336",
	"type": "url request injection",
	"severity": "Medium",
	"vector": "Remote",
	"description": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.\r\n\r\nThe package python-django contains a copy of urllib.parse.parse_qsl() which was added to backport some security fixes. A further security fix has been issued in versions 3.1.7, 3.0.13 and 2.2.19 such that parse_qsl() no longer allows using ; as a query parameter separator by default.",
	"groups": [
		"AVG-1597",
		"AVG-1593",
		"AVG-1465"
	],
	"packages": [
		"python",
		"python-django",
		"python2"
	],
	"advisories": [
		"ASA-202103-27",
		"ASA-202102-37",
		"ASA-202102-28"
	],
	"references": [
		"https://snyk.io/vuln/SNYK-UPSTREAM-PYTHONCPYTHON-1074933",
		"https://snyk.io/blog/cache-poisoning-in-popular-open-source-packages/",
		"https://bugs.python.org/issue42967",
		"https://github.com/python/cpython/pull/24297",
		"https://github.com/python/cpython/commit/c9f07813ab8e664d8c34413c4fc2d4f86c061a92",
		"https://www.djangoproject.com/weblog/2021/feb/19/security-releases/",
		"https://github.com/django/django/commit/8f6d431b08cbb418d9144b976e7b972546607851"
	],
	"notes": null
}