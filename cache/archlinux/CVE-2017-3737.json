{
  "name": "CVE-2017-3737",
  "type": "information disclosure",
  "severity": "Medium",
  "vector": "Remote",
  "description": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error.",
  "groups": [
    "AVG-550",
    "AVG-549",
    "AVG-548",
    "AVG-480"
  ],
  "packages": [
    "lib32-openssl",
    "openssl-1.0",
    "lib32-openssl-1.0",
    "openssl"
  ],
  "advisories": [
    "ASA-201712-11"
  ],
  "references": [
    "https://www.openssl.org/news/vulnerabilities.html#2017-3737",
    "https://www.openssl.org/news/secadv/20171207.txt",
    "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc"
  ],
  "notes": "Only affects version 1.0.2"
}