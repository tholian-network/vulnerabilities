{
  "name": "CVE-2017-8818",
  "type": "arbitrary code execution",
  "severity": "High",
  "vector": "Remote",
  "description": "An out-of-bounds flaw has been found in the SSL related code of libcurl >= 7.56.0 and < 7.57.0. When allocating memory for a connection (the internal struct called connectdata), a certain amount of memory is allocated at the end of the struct to be used for SSL related structs. Those structs are used by the particular SSL library libcurl is built to use. The application can also tell libcurl which specific SSL library to use if it was built to support more than one. The math used to calculate the extra memory amount necessary for the SSL library was wrong on 32 bit systems, which made the allocated memory too small by 4 bytes. The last struct member of the last object within the memory area could then be outside of what was allocated. Accessing that member could lead to a crash or other undefined behaviors depending on what memory that is present there and how the particular SSL library decides to act on that memory content.\r\nSpecifically the vulnerability is present if libcurl was built so that sizeof(long long *) < sizeof(long long) which as far as we are aware only happens in 32-bit builds.",
  "groups": [
    "AVG-529",
    "AVG-528",
    "AVG-527",
    "AVG-523",
    "AVG-522",
    "AVG-521"
  ],
  "packages": [
    "lib32-curl",
    "lib32-libcurl-gnutls",
    "libcurl-gnutls",
    "curl",
    "libcurl-compat",
    "lib32-libcurl-compat"
  ],
  "advisories": [
    "ASA-201711-38",
    "ASA-201711-37",
    "ASA-201711-36"
  ],
  "references": [
    "https://curl.haxx.se/docs/adv_2017-af0a.html",
    "https://curl.haxx.se/CVE-2017-8818.patch",
    "https://github.com/curl/curl/commit/9b5e12a5491d2e6b68e0c88ca56f3a9ef9fba400"
  ],
  "notes": "only affects 32-bit variants\r\nIntroduced by: https://github.com/curl/curl/commit/70f1db321a2b39c75f679b5b052aa1ac0636bd50"
}