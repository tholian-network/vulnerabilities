{
  "name": "CVE-2020-8285",
  "type": "denial of service",
  "severity": "Medium",
  "vector": "Remote",
  "description": "A security issue was found in curl versions 7.21.0 up to and including 7.73.0. libcurl offers a wildcard matching functionality, which allows a callback (set with CURLOPT_CHUNK_BGN_FUNCTION) to return information back to libcurl on how to handle a specific entry in a directory when libcurl iterates over a list of all available entries. When this callback returns CURL_CHUNK_BGN_FUNC_SKIP, to tell libcurl to not deal with that file, the internal function in libcurl then calls itself recursively to handle the next directory entry. If there's a sufficient amount of file entries and if the callback returns \"skip\" enough number of times, libcurl runs out of stack space. The exact amount will of course vary with platforms, compilers and other environmental factors. The content of the remote directory is not kept on the stack, so it seems hard for the attacker to control exactly what data that overwrites the stack - however it remains a Denial-Of-Service vector as a malicious user who controls a server that a libcurl-using application works with under these premises can trigger a crash.",
  "groups": [
    "AVG-1337"
  ],
  "packages": [
    "curl"
  ],
  "advisories": [],
  "references": [
    "https://curl.se/docs/CVE-2020-8285.html",
    "https://github.com/curl/curl/commit/69a358f2186e04cf44698b5100332cbf1ee7f01d"
  ],
  "notes": "Workaround\r\n==========\r\n\r\nThe issue can be mitigated by disabling FTP wildcard use (CURLOPT_WILDCARDMATCH), or making sure your CURLOPT_CHUNK_BGN_FUNCTION callback doesn't do multiple skips."
}