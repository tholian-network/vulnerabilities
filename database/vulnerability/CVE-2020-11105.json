{
	"identifier": "CVE-2020-11105",
	"description": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
	"type": "network",
	"severity": "high",
	"state": "published",
	"datetime": "2020-03-30T20:15:15Z",
	"is_edited": false,
	"hardware": [],
	"software": [],
	"products": [
		{
			"name": "cereal",
			"version": "\u003c= 1.3.0",
			"architecture": "any",
			"vendor": "usc",
			"type": "software",
			"is_edited": false,
			"aliases": []
		}
	],
	"references": [
		"https://github.com/USCiLab/cereal/issues/636"
	],
	"weaknesses": [
		"CWE-763"
	]
}