{
	"identifier": "CVE-2022-21230",
	"description": "This affects all versions of package org.nanohttpd:nanohttpd. Whenever an HTTP Session is parsing the body of an HTTP request, the body of the request is written to a RandomAccessFile when the it is larger than 1024 bytes. This file is created with insecure permissions that allow its contents to be viewed by all users on the host machine. **Workaround:** Manually specifying the -Djava.io.tmpdir= argument when launching Java to set the temporary directory to a directory exclusively controlled by the current user can fix this issue.",
	"type": "local",
	"severity": "low",
	"state": "published",
	"datetime": "2022-05-01T14:15:08Z",
	"is_edited": false,
	"hardware": [],
	"software": [],
	"products": [
		{
			"name": "nanohttpd",
			"version": "\u003c= 2.3.1",
			"architecture": "any",
			"vendor": "nanohttpd",
			"type": "software",
			"is_edited": false,
			"aliases": []
		}
	],
	"references": [
		"https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-2r85-x9cf-8fcg",
		"https://github.com/NanoHttpd/nanohttpd/blob/efb2ebf85a2b06f7c508aba9eaad5377e3a01e81/core/src/main/java/org/nanohttpd/protocols/http/tempfiles/DefaultTempFile.java%23L58",
		"https://github.com/NanoHttpd/nanohttpd/blob/efb2ebf85a2b06f7c508aba9eaad5377e3a01e81/core/src/main/java/org/nanohttpd/protocols/http/tempfiles/DefaultTempFileManager.java%23L60",
		"https://snyk.io/vuln/SNYK-JAVA-ORGNANOHTTPD-2422798"
	],
	"weaknesses": []
}